{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BN = require(\"bn.js\");\nvar evm_1 = require(\"../evm\");\nvar assert = require('assert');\nvar bn128 = require('rustbn.js');\nfunction default_1(opts) {\n  assert(opts.data);\n  var inputData = opts.data;\n  // no need to care about non-divisible-by-192, because bn128.pairing will properly fail in that case\n  var inputDataSize = Math.floor(inputData.length / 192);\n  var gasUsed = new BN(opts._common.param('gasPrices', 'ecPairing') + inputDataSize * opts._common.param('gasPrices', 'ecPairingWord'));\n  if (opts.gasLimit.lt(gasUsed)) {\n    return evm_1.OOGResult(opts.gasLimit);\n  }\n  var returnData = bn128.pairing(inputData);\n  // check ecpairing success or failure by comparing the output length\n  if (returnData.length !== 32) {\n    return evm_1.OOGResult(opts.gasLimit);\n  }\n  return {\n    gasUsed: gasUsed,\n    returnValue: returnData\n  };\n}\nexports.default = default_1;","map":null,"metadata":{},"sourceType":"script"}