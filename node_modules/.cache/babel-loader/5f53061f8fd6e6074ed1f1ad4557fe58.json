{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _possibleConstructorReturn = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetaTransactionCallFailedError = exports.MetaTransactionInvalidSignatureError = exports.MetaTransactionInsufficientEthError = exports.MetaTransactionGasPriceError = exports.MetaTransactionExpiredError = exports.MetaTransactionWrongSenderError = exports.MetaTransactionUnsupportedFunctionError = exports.MetaTransactionAlreadyExecutedError = exports.InvalidMetaTransactionsArrayLengthsError = void 0;\nvar revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nvar InvalidMetaTransactionsArrayLengthsError = /*#__PURE__*/function (_revert_error_1$Rever) {\n  _inherits(InvalidMetaTransactionsArrayLengthsError, _revert_error_1$Rever);\n  function InvalidMetaTransactionsArrayLengthsError(mtxCount, signatureCount) {\n    _classCallCheck(this, InvalidMetaTransactionsArrayLengthsError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidMetaTransactionsArrayLengthsError).call(this, 'InvalidMetaTransactionsArrayLengthsError', 'InvalidMetaTransactionsArrayLengthsError(uint256 mtxCount, uint256 signatureCount)', {\n      mtxCount: mtxCount,\n      signatureCount: signatureCount\n    }));\n  }\n  return InvalidMetaTransactionsArrayLengthsError;\n}(revert_error_1.RevertError);\nexports.InvalidMetaTransactionsArrayLengthsError = InvalidMetaTransactionsArrayLengthsError;\nvar MetaTransactionAlreadyExecutedError = /*#__PURE__*/function (_revert_error_1$Rever2) {\n  _inherits(MetaTransactionAlreadyExecutedError, _revert_error_1$Rever2);\n  function MetaTransactionAlreadyExecutedError(mtxHash, executedBlockNumber) {\n    _classCallCheck(this, MetaTransactionAlreadyExecutedError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionAlreadyExecutedError).call(this, 'MetaTransactionAlreadyExecutedError', 'MetaTransactionAlreadyExecutedError(bytes32 mtxHash, uint256 executedBlockNumber)', {\n      mtxHash: mtxHash,\n      executedBlockNumber: executedBlockNumber\n    }));\n  }\n  return MetaTransactionAlreadyExecutedError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionAlreadyExecutedError = MetaTransactionAlreadyExecutedError;\nvar MetaTransactionUnsupportedFunctionError = /*#__PURE__*/function (_revert_error_1$Rever3) {\n  _inherits(MetaTransactionUnsupportedFunctionError, _revert_error_1$Rever3);\n  function MetaTransactionUnsupportedFunctionError(mtxHash, selector) {\n    _classCallCheck(this, MetaTransactionUnsupportedFunctionError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionUnsupportedFunctionError).call(this, 'MetaTransactionUnsupportedFunctionError', 'MetaTransactionUnsupportedFunctionError(bytes32 mtxHash, bytes4 selector)', {\n      mtxHash: mtxHash,\n      selector: selector\n    }));\n  }\n  return MetaTransactionUnsupportedFunctionError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionUnsupportedFunctionError = MetaTransactionUnsupportedFunctionError;\nvar MetaTransactionWrongSenderError = /*#__PURE__*/function (_revert_error_1$Rever4) {\n  _inherits(MetaTransactionWrongSenderError, _revert_error_1$Rever4);\n  function MetaTransactionWrongSenderError(mtxHash, sender, expectedSender) {\n    _classCallCheck(this, MetaTransactionWrongSenderError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionWrongSenderError).call(this, 'MetaTransactionWrongSenderError', 'MetaTransactionWrongSenderError(bytes32 mtxHash, address sender, address expectedSender)', {\n      mtxHash: mtxHash,\n      sender: sender,\n      expectedSender: expectedSender\n    }));\n  }\n  return MetaTransactionWrongSenderError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionWrongSenderError = MetaTransactionWrongSenderError;\nvar MetaTransactionExpiredError = /*#__PURE__*/function (_revert_error_1$Rever5) {\n  _inherits(MetaTransactionExpiredError, _revert_error_1$Rever5);\n  function MetaTransactionExpiredError(mtxHash, time, expirationTime) {\n    _classCallCheck(this, MetaTransactionExpiredError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionExpiredError).call(this, 'MetaTransactionExpiredError', 'MetaTransactionExpiredError(bytes32 mtxHash, uint256 time, uint256 expirationTime)', {\n      mtxHash: mtxHash,\n      time: time,\n      expirationTime: expirationTime\n    }));\n  }\n  return MetaTransactionExpiredError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionExpiredError = MetaTransactionExpiredError;\nvar MetaTransactionGasPriceError = /*#__PURE__*/function (_revert_error_1$Rever6) {\n  _inherits(MetaTransactionGasPriceError, _revert_error_1$Rever6);\n  function MetaTransactionGasPriceError(mtxHash, gasPrice, minGasPrice, maxGasPrice) {\n    _classCallCheck(this, MetaTransactionGasPriceError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionGasPriceError).call(this, 'MetaTransactionGasPriceError', 'MetaTransactionGasPriceError(bytes32 mtxHash, uint256 gasPrice, uint256 minGasPrice, uint256 maxGasPrice)', {\n      mtxHash: mtxHash,\n      gasPrice: gasPrice,\n      minGasPrice: minGasPrice,\n      maxGasPrice: maxGasPrice\n    }));\n  }\n  return MetaTransactionGasPriceError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionGasPriceError = MetaTransactionGasPriceError;\nvar MetaTransactionInsufficientEthError = /*#__PURE__*/function (_revert_error_1$Rever7) {\n  _inherits(MetaTransactionInsufficientEthError, _revert_error_1$Rever7);\n  function MetaTransactionInsufficientEthError(mtxHash, ethBalance, ethRequired) {\n    _classCallCheck(this, MetaTransactionInsufficientEthError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionInsufficientEthError).call(this, 'MetaTransactionInsufficientEthError', 'MetaTransactionInsufficientEthError(bytes32 mtxHash, uint256 ethBalance, uint256 ethRequired)', {\n      mtxHash: mtxHash,\n      ethBalance: ethBalance,\n      ethRequired: ethRequired\n    }));\n  }\n  return MetaTransactionInsufficientEthError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionInsufficientEthError = MetaTransactionInsufficientEthError;\nvar MetaTransactionInvalidSignatureError = /*#__PURE__*/function (_revert_error_1$Rever8) {\n  _inherits(MetaTransactionInvalidSignatureError, _revert_error_1$Rever8);\n  function MetaTransactionInvalidSignatureError(mtxHash, signature, errData) {\n    _classCallCheck(this, MetaTransactionInvalidSignatureError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionInvalidSignatureError).call(this, 'MetaTransactionInvalidSignatureError', 'MetaTransactionInvalidSignatureError(bytes32 mtxHash, bytes signature, bytes errData)', {\n      mtxHash: mtxHash,\n      signature: signature,\n      errData: errData\n    }));\n  }\n  return MetaTransactionInvalidSignatureError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionInvalidSignatureError = MetaTransactionInvalidSignatureError;\nvar MetaTransactionCallFailedError = /*#__PURE__*/function (_revert_error_1$Rever9) {\n  _inherits(MetaTransactionCallFailedError, _revert_error_1$Rever9);\n  function MetaTransactionCallFailedError(mtxHash, callData, returnData) {\n    _classCallCheck(this, MetaTransactionCallFailedError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetaTransactionCallFailedError).call(this, 'MetaTransactionCallFailedError', 'MetaTransactionCallFailedError(bytes32 mtxHash, bytes callData, bytes returnData)', {\n      mtxHash: mtxHash,\n      callData: callData,\n      returnData: returnData\n    }));\n  }\n  return MetaTransactionCallFailedError;\n}(revert_error_1.RevertError);\nexports.MetaTransactionCallFailedError = MetaTransactionCallFailedError;\nvar types = [InvalidMetaTransactionsArrayLengthsError, MetaTransactionAlreadyExecutedError, MetaTransactionUnsupportedFunctionError, MetaTransactionWrongSenderError, MetaTransactionExpiredError, MetaTransactionGasPriceError, MetaTransactionInsufficientEthError, MetaTransactionInvalidSignatureError, MetaTransactionCallFailedError];\n// Register the types we've defined.\nfor (var _i = 0, _types = types; _i < _types.length; _i++) {\n  var type = _types[_i];\n  revert_error_1.RevertError.registerType(type);\n}","map":null,"metadata":{},"sourceType":"script"}