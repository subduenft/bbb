{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar IsArray = require('./IsArray');\nvar $apply = GetIntrinsic('%Reflect.apply%', true) || callBound('Function.prototype.apply');\n\n// https://262.ecma-international.org/6.0/#sec-call\n\nmodule.exports = function Call(F, V) {\n  var argumentsList = arguments.length > 2 ? arguments[2] : [];\n  if (!IsArray(argumentsList)) {\n    throw new $TypeError('Assertion failed: optional `argumentsList`, if provided, must be a List');\n  }\n  return $apply(F, V, argumentsList);\n};","map":null,"metadata":{},"sourceType":"script"}