{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultGetter = void 0;\nvar logger_1 = require(\"@ethersproject/logger\");\nvar utils_1 = require(\"ethers/lib/utils\");\nvar logger = new logger_1.Logger(\"defaults\");\nvar baseDefaults = {\n  integer: 0,\n  address: (0, utils_1.hexZeroPad)(\"0x\", 20),\n  bool: false,\n  bytes: \"0x\",\n  string: \"\"\n};\nvar isNullish = function isNullish(value) {\n  if (value === undefined) return false;\n  return value !== undefined && value !== null && ([\"string\", \"number\"].includes(typeof value) && BigInt(value) === BigInt(0) || Array.isArray(value) && value.every(isNullish) || typeof value === \"object\" && Object.values(value).every(isNullish) || typeof value === \"boolean\" && value === false);\n};\nfunction getDefaultForBaseType(type) {\n  var _a;\n  // bytesXX\n  var _b = __read((_a = type.match(/^bytes(\\d+)$/)) !== null && _a !== void 0 ? _a : [], 2),\n    width = _b[1];\n  if (width) return (0, utils_1.hexZeroPad)(\"0x\", parseInt(width));\n  if (type.match(/^(u?)int(\\d*)$/)) type = \"integer\";\n  return baseDefaults[type];\n}\nvar DefaultGetter = /** @class */function () {\n  function DefaultGetter(types) {\n    this.types = types;\n    this.defaultValues = {};\n    for (var name_1 in types) {\n      var defaultValue = this.getDefaultValue(name_1);\n      this.defaultValues[name_1] = defaultValue;\n      if (!isNullish(defaultValue)) {\n        logger.throwError(\"Got non-empty value for type \".concat(name_1, \" in default generator: \").concat(defaultValue));\n      }\n    }\n  }\n  DefaultGetter.from = function (types, type) {\n    var defaultValues = new DefaultGetter(types).defaultValues;\n    if (type) return defaultValues[type];\n    return defaultValues;\n  };\n  /* eslint-enable no-dupe-class-members */\n  DefaultGetter.prototype.getDefaultValue = function (type) {\n    var _this = this;\n    if (this.defaultValues[type]) return this.defaultValues[type];\n    // Basic type (address, bool, uint256, etc)\n    var basic = getDefaultForBaseType(type);\n    if (basic !== undefined) return basic;\n    // Array\n    var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n      var subtype = match[1];\n      var length_1 = parseInt(match[3]);\n      if (length_1 > 0) {\n        var baseValue = this.getDefaultValue(subtype);\n        return Array(length_1).fill(baseValue);\n      }\n      return [];\n    }\n    // Struct\n    var fields = this.types[type];\n    if (fields) {\n      return fields.reduce(function (obj, _a) {\n        var _b;\n        var name = _a.name,\n          type = _a.type;\n        return __assign(__assign({}, obj), (_b = {}, _b[name] = _this.getDefaultValue(type), _b));\n      }, {});\n    }\n    return logger.throwArgumentError(\"unknown type: \".concat(type), \"type\", type);\n  };\n  return DefaultGetter;\n}();\nexports.DefaultGetter = DefaultGetter;","map":null,"metadata":{},"sourceType":"script"}