{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressDataType = void 0;\nvar ethereum_types_1 = require(\"ethereum-types\");\nvar ethUtil = require(\"ethereumjs-util\");\nvar _ = require(\"lodash\");\nvar blob_1 = require(\"../abstract_data_types/types/blob\");\nvar constants_1 = require(\"../utils/constants\");\nvar AddressDataType = /*#__PURE__*/function (_blob_1$AbstractBlobD) {\n  _inherits(AddressDataType, _blob_1$AbstractBlobD);\n  function AddressDataType(dataItem, dataTypeFactory) {\n    var _this;\n    _classCallCheck(this, AddressDataType);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddressDataType).call(this, dataItem, dataTypeFactory, AddressDataType._SIZE_KNOWN_AT_COMPILE_TIME));\n    if (!AddressDataType.matchType(dataItem.type)) {\n      throw new Error(\"Tried to instantiate Address with bad input: \".concat(dataItem));\n    }\n    return _this;\n  }\n  _createClass(AddressDataType, [{\n    key: \"encodeValue\",\n    // Disable prefer-function-over-method for inherited abstract methods.\n    /* tslint:disable prefer-function-over-method */\n    value: function encodeValue(value) {\n      if (!ethUtil.isValidAddress(value)) {\n        throw new Error(\"Invalid address: '\".concat(value, \"'\"));\n      }\n      var valueBuf = ethUtil.toBuffer(value);\n      var encodedValueBuf = ethUtil.setLengthLeft(valueBuf, constants_1.constants.EVM_WORD_WIDTH_IN_BYTES);\n      return encodedValueBuf;\n    }\n  }, {\n    key: \"decodeValue\",\n    value: function decodeValue(calldata) {\n      var valueBufPadded = calldata.popWord();\n      var valueBuf = valueBufPadded.slice(AddressDataType._DECODED_ADDRESS_OFFSET_IN_BYTES);\n      var value = ethUtil.bufferToHex(valueBuf);\n      var valueLowercase = _.toLower(value);\n      return valueLowercase;\n    }\n  }, {\n    key: \"getDefaultValue\",\n    value: function getDefaultValue() {\n      return AddressDataType._DEFAULT_VALUE;\n    }\n  }, {\n    key: \"getSignatureType\",\n    value: function getSignatureType() {\n      return ethereum_types_1.SolidityTypes.Address;\n    }\n  }], [{\n    key: \"matchType\",\n    value: function matchType(type) {\n      return type === ethereum_types_1.SolidityTypes.Address;\n    }\n  }]);\n  return AddressDataType;\n}(blob_1.AbstractBlobDataType);\nexports.AddressDataType = AddressDataType;\nAddressDataType._SIZE_KNOWN_AT_COMPILE_TIME = true;\nAddressDataType._ADDRESS_SIZE_IN_BYTES = 20;\nAddressDataType._DECODED_ADDRESS_OFFSET_IN_BYTES = constants_1.constants.EVM_WORD_WIDTH_IN_BYTES - AddressDataType._ADDRESS_SIZE_IN_BYTES;\nAddressDataType._DEFAULT_VALUE = '0x0000000000000000000000000000000000000000';","map":null,"metadata":{},"sourceType":"script"}