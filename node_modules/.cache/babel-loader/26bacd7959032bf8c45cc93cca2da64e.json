{"ast":null,"code":"\"use strict\";\n\nvar _possibleConstructorReturn = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _classCallCheck = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReverseCalldataIterator = exports.CalldataIterator = void 0;\n/* tslint:disable max-classes-per-file */\nvar _ = require(\"lodash\");\nvar queue_1 = require(\"../utils/queue\");\nvar blob_1 = require(\"./blocks/blob\");\nvar pointer_1 = require(\"./blocks/pointer\");\nvar set_1 = require(\"./blocks/set\");\n/**\n * Iterator class for Calldata Blocks. Blocks follows the order\n * they should be put into calldata that is passed to he EVM.\n *\n * Example #1:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                  } B,\n *                  Blob{} C\n *            }\n * It will iterate as follows: [A, B, C, B.a]\n *\n * Example #2:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                      Pointer {\n *                          Blob{} b\n *                      }\n *                  } B,\n *                  Pointer {\n *                      Blob{} c\n *                  } C\n *            }\n * It will iterate as follows: [A, B, C, B.a, B.b, C.c]\n */\nvar BaseIterator = /*#__PURE__*/function () {\n  function BaseIterator(root) {\n    _classCallCheck(this, BaseIterator);\n    this._root = root;\n    this._queue = BaseIterator._createQueue(root);\n  }\n  _createClass(BaseIterator, [{\n    key: Symbol.iterator,\n    value: function value() {\n      var _this = this;\n      return {\n        next: function next() {\n          var nextBlock = _this.nextBlock();\n          if (nextBlock !== undefined) {\n            return {\n              value: nextBlock,\n              done: false\n            };\n          }\n          return {\n            done: true,\n            value: new blob_1.BlobCalldataBlock('', '', '', Buffer.from(''))\n          };\n        }\n      };\n    }\n  }], [{\n    key: \"_createQueue\",\n    value: function _createQueue(block) {\n      var queue = new queue_1.Queue();\n      // Base case\n      if (!(block instanceof set_1.SetCalldataBlock)) {\n        queue.pushBack(block);\n        return queue;\n      }\n      // This is a set; add members\n      var set = block;\n      _.eachRight(set.getMembers(), function (member) {\n        queue.mergeFront(BaseIterator._createQueue(member));\n      });\n      // Add children\n      _.each(set.getMembers(), function (member) {\n        // Traverse child if it is a unique pointer.\n        // A pointer that is an alias for another pointer is ignored.\n        if (member instanceof pointer_1.PointerCalldataBlock && member.getAlias() === undefined) {\n          var dependency = member.getDependency();\n          queue.mergeBack(BaseIterator._createQueue(dependency));\n        }\n      });\n      // Put set block at the front of the queue\n      queue.pushFront(set);\n      return queue;\n    }\n  }]);\n  return BaseIterator;\n}();\nvar CalldataIterator = /*#__PURE__*/function (_BaseIterator) {\n  _inherits(CalldataIterator, _BaseIterator);\n  function CalldataIterator(root) {\n    _classCallCheck(this, CalldataIterator);\n    return _possibleConstructorReturn(this, _getPrototypeOf(CalldataIterator).call(this, root));\n  }\n  _createClass(CalldataIterator, [{\n    key: \"nextBlock\",\n    value: function nextBlock() {\n      return this._queue.popFront();\n    }\n  }]);\n  return CalldataIterator;\n}(BaseIterator);\nexports.CalldataIterator = CalldataIterator;\nvar ReverseCalldataIterator = /*#__PURE__*/function (_BaseIterator2) {\n  _inherits(ReverseCalldataIterator, _BaseIterator2);\n  function ReverseCalldataIterator(root) {\n    _classCallCheck(this, ReverseCalldataIterator);\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReverseCalldataIterator).call(this, root));\n  }\n  _createClass(ReverseCalldataIterator, [{\n    key: \"nextBlock\",\n    value: function nextBlock() {\n      return this._queue.popBack();\n    }\n  }]);\n  return ReverseCalldataIterator;\n}(BaseIterator);\nexports.ReverseCalldataIterator = ReverseCalldataIterator;","map":null,"metadata":{},"sourceType":"script"}