{"ast":null,"code":"\"use strict\";\n\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deserializeOrder = exports.serializeOrdersQueryOptions = exports.getFulfillOfferPayload = exports.getFulfillListingPayload = exports.getFulfillmentDataPath = exports.getBuildCollectionOfferPayload = exports.getPostCollectionOfferPayload = exports.getPostCollectionOfferPath = exports.getBuildOfferPath = exports.getCollectionPath = exports.getOrdersAPIPath = void 0;\nvar types_1 = require(\"../types\");\nvar utils_1 = require(\"../utils\");\nvar NETWORK_TO_CHAIN = (_a = {}, _a[types_1.Network.Main] = \"ethereum\", _a[types_1.Network.Rinkeby] = \"rinkeby\", _a[types_1.Network.Goerli] = \"goerli\", _a);\nvar getOrdersAPIPath = function getOrdersAPIPath(network, protocol, side) {\n  var chain = NETWORK_TO_CHAIN[network];\n  var sidePath = side === \"ask\" ? \"listings\" : \"offers\";\n  return \"/v2/orders/\".concat(chain, \"/\").concat(protocol, \"/\").concat(sidePath);\n};\nexports.getOrdersAPIPath = getOrdersAPIPath;\nvar getCollectionPath = function getCollectionPath(slug) {\n  return \"/api/v1/collection/\".concat(slug);\n};\nexports.getCollectionPath = getCollectionPath;\nvar getBuildOfferPath = function getBuildOfferPath() {\n  return \"/v2/offers/build\";\n};\nexports.getBuildOfferPath = getBuildOfferPath;\nvar getPostCollectionOfferPath = function getPostCollectionOfferPath() {\n  return \"/v2/offers\";\n};\nexports.getPostCollectionOfferPath = getPostCollectionOfferPath;\nvar getPostCollectionOfferPayload = function getPostCollectionOfferPayload(collectionSlug, protocol_data) {\n  return {\n    criteria: {\n      collection: {\n        slug: collectionSlug\n      }\n    },\n    protocol_data: protocol_data\n  };\n};\nexports.getPostCollectionOfferPayload = getPostCollectionOfferPayload;\nvar getBuildCollectionOfferPayload = function getBuildCollectionOfferPayload(offererAddress, quantity, collectionSlug) {\n  return {\n    offerer: offererAddress,\n    quantity: quantity,\n    criteria: {\n      collection: {\n        slug: collectionSlug\n      }\n    }\n  };\n};\nexports.getBuildCollectionOfferPayload = getBuildCollectionOfferPayload;\nvar getFulfillmentDataPath = function getFulfillmentDataPath(side) {\n  var sidePath = side === \"ask\" ? \"listings\" : \"offers\";\n  return \"/v2/\".concat(sidePath, \"/fulfillment_data\");\n};\nexports.getFulfillmentDataPath = getFulfillmentDataPath;\nvar getFulfillListingPayload = function getFulfillListingPayload(fulfillerAddress, order_hash, protocolAddress, network) {\n  var chain = NETWORK_TO_CHAIN[network];\n  return {\n    listing: {\n      hash: order_hash,\n      chain: chain,\n      protocol_address: protocolAddress\n    },\n    fulfiller: {\n      address: fulfillerAddress\n    }\n  };\n};\nexports.getFulfillListingPayload = getFulfillListingPayload;\nvar getFulfillOfferPayload = function getFulfillOfferPayload(fulfillerAddress, order_hash, protocolAddress, network) {\n  var chain = NETWORK_TO_CHAIN[network];\n  return {\n    offer: {\n      hash: order_hash,\n      chain: chain,\n      protocol_address: protocolAddress\n    },\n    fulfiller: {\n      address: fulfillerAddress\n    }\n  };\n};\nexports.getFulfillOfferPayload = getFulfillOfferPayload;\nvar serializeOrdersQueryOptions = function serializeOrdersQueryOptions(options) {\n  var _a;\n  return {\n    limit: options.limit,\n    cursor: options.cursor,\n    payment_token_address: options.paymentTokenAddress,\n    maker: options.maker,\n    taker: options.taker,\n    owner: options.owner,\n    bundled: options.bundled,\n    include_bundled: options.includeBundled,\n    listed_after: options.listedAfter,\n    listed_before: options.listedBefore,\n    token_ids: (_a = options.tokenIds) !== null && _a !== void 0 ? _a : [options.tokenId],\n    asset_contract_address: options.assetContractAddress,\n    order_by: options.orderBy,\n    order_direction: options.orderDirection,\n    only_english: options.onlyEnglish\n  };\n};\nexports.serializeOrdersQueryOptions = serializeOrdersQueryOptions;\nvar deserializeOrder = function deserializeOrder(order) {\n  return {\n    createdDate: order.created_date,\n    closingDate: order.closing_date,\n    listingTime: order.listing_time,\n    expirationTime: order.expiration_time,\n    orderHash: order.order_hash,\n    maker: (0, utils_1.accountFromJSON)(order.maker),\n    taker: order.taker ? (0, utils_1.accountFromJSON)(order.taker) : null,\n    protocolData: order.protocol_data,\n    protocolAddress: order.protocol_address,\n    currentPrice: order.current_price,\n    makerFees: order.maker_fees.map(function (_a) {\n      var account = _a.account,\n        basis_points = _a.basis_points;\n      return {\n        account: (0, utils_1.accountFromJSON)(account),\n        basisPoints: basis_points\n      };\n    }),\n    takerFees: order.taker_fees.map(function (_a) {\n      var account = _a.account,\n        basis_points = _a.basis_points;\n      return {\n        account: (0, utils_1.accountFromJSON)(account),\n        basisPoints: basis_points\n      };\n    }),\n    side: order.side,\n    orderType: order.order_type,\n    cancelled: order.cancelled,\n    finalized: order.finalized,\n    markedInvalid: order.marked_invalid,\n    clientSignature: order.client_signature,\n    makerAssetBundle: (0, utils_1.assetBundleFromJSON)(order.maker_asset_bundle),\n    takerAssetBundle: (0, utils_1.assetBundleFromJSON)(order.taker_asset_bundle)\n  };\n};\nexports.deserializeOrder = deserializeOrder;","map":null,"metadata":{},"sourceType":"script"}