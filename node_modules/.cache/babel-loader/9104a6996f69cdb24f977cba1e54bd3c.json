{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ENSNameBaseSchema = exports.nodehash = exports.namehash = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar namehash = function namehash(name) {\n  var node = '0000000000000000000000000000000000000000000000000000000000000000';\n  if (name !== '') {\n    var labels = name.split('.');\n    for (var i = labels.length - 1; i >= 0; i--) {\n      var labelHash = (0, ethereumjs_util_1.sha3)(labels[i]).toString('hex');\n      node = (0, ethereumjs_util_1.sha3)(Buffer.from(node + labelHash, 'hex')).toString('hex');\n    }\n  }\n  return '0x' + node.toString();\n};\nexports.namehash = namehash;\nvar nodehash = function nodehash(name) {\n  var label = name.split('.')[0];\n  if (label) {\n    return '0x' + (0, ethereumjs_util_1.sha3)(label).toString('hex');\n  } else {\n    return '';\n  }\n};\nexports.nodehash = nodehash;\nexports.ENSNameBaseSchema = {\n  fields: [{\n    name: 'Name',\n    type: 'string',\n    description: 'ENS Name'\n  }, {\n    name: 'NodeHash',\n    type: 'bytes32',\n    description: 'ENS Node Hash',\n    readOnly: true\n  }, {\n    name: 'NameHash',\n    type: 'bytes32',\n    description: 'ENS Name Hash',\n    readOnly: true\n  }],\n  assetFromFields: function assetFromFields(fields) {\n    return {\n      id: fields.ID,\n      address: fields.Address,\n      name: fields.Name,\n      nodeHash: (0, exports.nodehash)(fields.Name),\n      nameHash: (0, exports.namehash)(fields.Name)\n    };\n  },\n  checkAsset: function checkAsset(asset) {\n    return asset.name ? (0, exports.namehash)(asset.name) === asset.nameHash && (0, exports.nodehash)(asset.name) === asset.nodeHash : true;\n  },\n  hash: function hash(_ref) {\n    var nodeHash = _ref.nodeHash;\n    return nodeHash;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}