{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $concat = GetIntrinsic('%Array.prototype.concat%');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar $slice = callBound('Array.prototype.slice');\nvar hasSymbols = require('has-symbols/shams')();\nvar isConcatSpreadable = hasSymbols && Symbol.isConcatSpreadable;\nvar empty = [];\nif (isConcatSpreadable) {\n  empty[isConcatSpreadable] = true;\n}\nvar $concatApply = isConcatSpreadable ? callBind.apply($concat, empty) : null;\nvar $concatCall = isConcatSpreadable ? null : callBind($concat, empty);\nvar isArray = isConcatSpreadable ? require('isarray') : null;\nmodule.exports = isConcatSpreadable\n// eslint-disable-next-line no-unused-vars\n? function safeArrayConcat(item) {\n  for (var i = 0; i < arguments.length; i += 1) {\n    var arg = arguments[i];\n    if (arg && typeof arg === 'object' && typeof arg[isConcatSpreadable] === 'boolean') {\n      var arr = isArray(arg) ? $slice(arg) : [arg];\n      arr[isConcatSpreadable] = true; // shadow the property. TODO: use [[Define]]\n      arguments[i] = arr;\n    }\n  }\n  return $concatApply(arguments);\n} : $concatCall;","map":null,"metadata":{},"sourceType":"script"}