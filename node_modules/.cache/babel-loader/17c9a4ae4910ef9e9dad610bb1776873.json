{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar LRU = require(\"lru-cache\");\n/**\n * Simple LRU Cache that allows for keys of type Buffer\n * @hidden\n */\nvar Cache = /** @class */function () {\n  function Cache(opts) {\n    this._cache = new LRU(opts);\n  }\n  Cache.prototype.set = function (key, value) {\n    if (key instanceof Buffer) {\n      key = key.toString('hex');\n    }\n    this._cache.set(key, value);\n  };\n  Cache.prototype.get = function (key) {\n    if (key instanceof Buffer) {\n      key = key.toString('hex');\n    }\n    return this._cache.get(key);\n  };\n  Cache.prototype.del = function (key) {\n    if (key instanceof Buffer) {\n      key = key.toString('hex');\n    }\n    this._cache.del(key);\n  };\n  return Cache;\n}();\nexports.default = Cache;","map":null,"metadata":{},"sourceType":"script"}