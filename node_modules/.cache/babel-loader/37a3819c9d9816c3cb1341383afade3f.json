{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTagFromDomain = exports.getTransactionMethods = exports.executeAllActions = void 0;\nvar utils_1 = require(\"ethers/lib/utils\");\nvar executeAllActions = function executeAllActions(actions) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var i, action, tx, finalAction;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          i = 0;\n          _a.label = 1;\n        case 1:\n          if (!(i < actions.length - 1)) return [3 /*break*/, 5];\n          action = actions[i];\n          if (!(action.type === \"approval\")) return [3 /*break*/, 4];\n          return [4 /*yield*/, action.transactionMethods.transact()];\n        case 2:\n          tx = _a.sent();\n          return [4 /*yield*/, tx.wait()];\n        case 3:\n          _a.sent();\n          _a.label = 4;\n        case 4:\n          i++;\n          return [3 /*break*/, 1];\n        case 5:\n          finalAction = actions[actions.length - 1];\n          switch (finalAction.type) {\n            case \"create\":\n              return [2 /*return*/, finalAction.createOrder()];\n            case \"createBulk\":\n              return [2 /*return*/, finalAction.createBulkOrders()];\n            default:\n              return [2 /*return*/, finalAction.transactionMethods.transact()];\n          }\n          return [2 /*return*/];\n      }\n    });\n  });\n};\n\nexports.executeAllActions = executeAllActions;\nvar instanceOfOverrides = function instanceOfOverrides(obj) {\n  var validKeys = [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"type\", \"accessList\", \"customData\", \"ccipReadEnabled\", \"value\", \"blockTag\", \"CallOverrides\"];\n  return obj === undefined || Object.keys(obj).every(function (key) {\n    return validKeys.includes(key);\n  });\n};\nvar getTransactionMethods = function getTransactionMethods(contract, method, args, domain) {\n  if (domain === void 0) {\n    domain = \"\";\n  }\n  var lastArg = args[args.length - 1];\n  var initialOverrides;\n  if (instanceOfOverrides(lastArg)) {\n    initialOverrides = lastArg;\n    args.pop();\n  }\n  var buildTransaction = function buildTransaction(overrides) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var mergedOverrides, populatedTransaction, tag;\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            mergedOverrides = __assign(__assign({}, initialOverrides), overrides);\n            return [4 /*yield*/, (_a = contract.populateTransaction)[method].apply(_a, __spreadArray([], __read(__spreadArray(__spreadArray([], __read(args), false), [mergedOverrides], false)), false))];\n          case 1:\n            populatedTransaction = _b.sent();\n            tag = (0, exports.getTagFromDomain)(domain);\n            populatedTransaction.data = populatedTransaction.data + tag;\n            return [2 /*return*/, populatedTransaction];\n        }\n      });\n    });\n  };\n  return {\n    callStatic: function callStatic(overrides) {\n      var _a;\n      var mergedOverrides = __assign(__assign({}, initialOverrides), overrides);\n      return (_a = contract.callStatic)[method].apply(_a, __spreadArray([], __read(__spreadArray(__spreadArray([], __read(args), false), [mergedOverrides], false)), false));\n    },\n    estimateGas: function estimateGas(overrides) {\n      var _a;\n      var mergedOverrides = __assign(__assign({}, initialOverrides), overrides);\n      return (_a = contract.estimateGas)[method].apply(_a, __spreadArray([], __read(__spreadArray(__spreadArray([], __read(args), false), [mergedOverrides], false)), false));\n    },\n    transact: function transact(overrides) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var mergedOverrides, data;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              mergedOverrides = __assign(__assign({}, initialOverrides), overrides);\n              return [4 /*yield*/, buildTransaction(mergedOverrides)];\n            case 1:\n              data = _a.sent();\n              return [2 /*return*/, contract.signer.sendTransaction(data)];\n          }\n        });\n      });\n    },\n    buildTransaction: buildTransaction\n  };\n};\nexports.getTransactionMethods = getTransactionMethods;\nvar getTagFromDomain = function getTagFromDomain(domain) {\n  return (0, utils_1.keccak256)((0, utils_1.toUtf8Bytes)(domain)).slice(2, 10);\n};\nexports.getTagFromDomain = getTagFromDomain;","map":null,"metadata":{},"sourceType":"script"}