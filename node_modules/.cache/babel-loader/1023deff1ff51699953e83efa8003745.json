{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashToNumberKey = exports.numberToHashKey = exports.bodyKey = exports.headerKey = exports.tdKey = exports.bufBE8 = exports.headBlockKey = exports.headHeaderKey = exports.headsKey = void 0;\n// Geth compatible DB keys\nvar headsKey = 'heads';\nexports.headsKey = headsKey;\n/**\n * Current canonical head for light sync\n */\nvar headHeaderKey = 'LastHeader';\nexports.headHeaderKey = headHeaderKey;\n/**\n * Current canonical head for full sync\n */\nvar headBlockKey = 'LastBlock';\nexports.headBlockKey = headBlockKey;\n/**\n * headerPrefix + number + hash -> header\n */\nvar headerPrefix = Buffer.from('h');\n/**\n * headerPrefix + number + hash + tdSuffix -> td\n */\nvar tdSuffix = Buffer.from('t');\n/**\n * headerPrefix + number + numSuffix -> hash\n */\nvar numSuffix = Buffer.from('n');\n/**\n * blockHashPrefix + hash -> number\n */\nvar blockHashPrefix = Buffer.from('H');\n/**\n * bodyPrefix + number + hash -> block body\n */\nvar bodyPrefix = Buffer.from('b');\n// Utility functions\n/**\n * Convert BN to big endian Buffer\n */\nvar bufBE8 = function bufBE8(n) {\n  return n.toArrayLike(Buffer, 'be', 8);\n};\nexports.bufBE8 = bufBE8;\nvar tdKey = function tdKey(n, hash) {\n  return Buffer.concat([headerPrefix, bufBE8(n), hash, tdSuffix]);\n};\nexports.tdKey = tdKey;\nvar headerKey = function headerKey(n, hash) {\n  return Buffer.concat([headerPrefix, bufBE8(n), hash]);\n};\nexports.headerKey = headerKey;\nvar bodyKey = function bodyKey(n, hash) {\n  return Buffer.concat([bodyPrefix, bufBE8(n), hash]);\n};\nexports.bodyKey = bodyKey;\nvar numberToHashKey = function numberToHashKey(n) {\n  return Buffer.concat([headerPrefix, bufBE8(n), numSuffix]);\n};\nexports.numberToHashKey = numberToHashKey;\nvar hashToNumberKey = function hashToNumberKey(hash) {\n  return Buffer.concat([blockHashPrefix, hash]);\n};\nexports.hashToNumberKey = hashToNumberKey;","map":null,"metadata":{},"sourceType":"script"}