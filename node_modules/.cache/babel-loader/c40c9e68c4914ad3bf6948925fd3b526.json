{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _possibleConstructorReturn = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinOpError = exports.UnsignedValueError = exports.SignedValueError = exports.BinOpErrorCodes = exports.ValueErrorCodes = void 0;\nvar revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nvar ValueErrorCodes;\n(function (ValueErrorCodes) {\n  ValueErrorCodes[ValueErrorCodes[\"TooSmall\"] = 0] = \"TooSmall\";\n  ValueErrorCodes[ValueErrorCodes[\"TooLarge\"] = 1] = \"TooLarge\";\n})(ValueErrorCodes = exports.ValueErrorCodes || (exports.ValueErrorCodes = {}));\nvar BinOpErrorCodes;\n(function (BinOpErrorCodes) {\n  BinOpErrorCodes[BinOpErrorCodes[\"AdditionOverflow\"] = 0] = \"AdditionOverflow\";\n  BinOpErrorCodes[BinOpErrorCodes[\"MultiplicationOverflow\"] = 1] = \"MultiplicationOverflow\";\n  BinOpErrorCodes[BinOpErrorCodes[\"DivisionByZero\"] = 2] = \"DivisionByZero\";\n  BinOpErrorCodes[BinOpErrorCodes[\"DivisionOverflow\"] = 3] = \"DivisionOverflow\";\n})(BinOpErrorCodes = exports.BinOpErrorCodes || (exports.BinOpErrorCodes = {}));\nvar SignedValueError = /*#__PURE__*/function (_revert_error_1$Rever) {\n  _inherits(SignedValueError, _revert_error_1$Rever);\n  function SignedValueError(error, n) {\n    _classCallCheck(this, SignedValueError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(SignedValueError).call(this, 'SignedValueError', 'SignedValueError(uint8 error, int256 n)', {\n      error: error,\n      n: n\n    }));\n  }\n  return SignedValueError;\n}(revert_error_1.RevertError);\nexports.SignedValueError = SignedValueError;\nvar UnsignedValueError = /*#__PURE__*/function (_revert_error_1$Rever2) {\n  _inherits(UnsignedValueError, _revert_error_1$Rever2);\n  function UnsignedValueError(error, n) {\n    _classCallCheck(this, UnsignedValueError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(UnsignedValueError).call(this, 'UnsignedValueError', 'UnsignedValueError(uint8 error, uint256 n)', {\n      error: error,\n      n: n\n    }));\n  }\n  return UnsignedValueError;\n}(revert_error_1.RevertError);\nexports.UnsignedValueError = UnsignedValueError;\nvar BinOpError = /*#__PURE__*/function (_revert_error_1$Rever3) {\n  _inherits(BinOpError, _revert_error_1$Rever3);\n  function BinOpError(error, a, b) {\n    _classCallCheck(this, BinOpError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(BinOpError).call(this, 'BinOpError', 'BinOpError(uint8 error, int256 a, int256 b)', {\n      error: error,\n      a: a,\n      b: b\n    }));\n  }\n  return BinOpError;\n}(revert_error_1.RevertError);\nexports.BinOpError = BinOpError;\nvar types = [SignedValueError, UnsignedValueError, BinOpError];\n// Register the types we've defined.\nfor (var _i = 0, _types = types; _i < _types.length; _i++) {\n  var type = _types[_i];\n  revert_error_1.RevertError.registerType(type);\n}","map":null,"metadata":{},"sourceType":"script"}