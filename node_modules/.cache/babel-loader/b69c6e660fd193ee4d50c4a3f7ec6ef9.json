{"ast":null,"code":"'use strict';\n\nvar has = require('has');\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar Type = require('./Type');\nvar ToBoolean = require('./ToBoolean');\nvar IsCallable = require('./IsCallable');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.5\n\nmodule.exports = function ToPropertyDescriptor(Obj) {\n  if (Type(Obj) !== 'Object') {\n    throw new $TypeError('ToPropertyDescriptor requires an object');\n  }\n  var desc = {};\n  if (has(Obj, 'enumerable')) {\n    desc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);\n  }\n  if (has(Obj, 'configurable')) {\n    desc['[[Configurable]]'] = ToBoolean(Obj.configurable);\n  }\n  if (has(Obj, 'value')) {\n    desc['[[Value]]'] = Obj.value;\n  }\n  if (has(Obj, 'writable')) {\n    desc['[[Writable]]'] = ToBoolean(Obj.writable);\n  }\n  if (has(Obj, 'get')) {\n    var getter = Obj.get;\n    if (typeof getter !== 'undefined' && !IsCallable(getter)) {\n      throw new $TypeError('getter must be a function');\n    }\n    desc['[[Get]]'] = getter;\n  }\n  if (has(Obj, 'set')) {\n    var setter = Obj.set;\n    if (typeof setter !== 'undefined' && !IsCallable(setter)) {\n      throw new $TypeError('setter must be a function');\n    }\n    desc['[[Set]]'] = setter;\n  }\n  if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n    throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n  }\n  return desc;\n};","map":null,"metadata":{},"sourceType":"script"}