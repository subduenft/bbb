{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _possibleConstructorReturn = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/nicholasschepisi/Desktop/code/bbb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EthFeeLengthMismatchError = exports.DefaultFunctionWethContractOnlyError = exports.InsufficientEthForFeeError = exports.UnregisteredAssetProxyError = void 0;\nvar revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nvar UnregisteredAssetProxyError = /*#__PURE__*/function (_revert_error_1$Rever) {\n  _inherits(UnregisteredAssetProxyError, _revert_error_1$Rever);\n  function UnregisteredAssetProxyError() {\n    _classCallCheck(this, UnregisteredAssetProxyError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(UnregisteredAssetProxyError).call(this, 'UnregisteredAssetProxyError', 'UnregisteredAssetProxyError()', {}));\n  }\n  return UnregisteredAssetProxyError;\n}(revert_error_1.RevertError);\nexports.UnregisteredAssetProxyError = UnregisteredAssetProxyError;\nvar InsufficientEthForFeeError = /*#__PURE__*/function (_revert_error_1$Rever2) {\n  _inherits(InsufficientEthForFeeError, _revert_error_1$Rever2);\n  function InsufficientEthForFeeError(ethFeeRequired, ethAvailable) {\n    _classCallCheck(this, InsufficientEthForFeeError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(InsufficientEthForFeeError).call(this, 'InsufficientEthForFeeError', 'InsufficientEthForFeeError(uint256 ethFeeRequired, uint256 ethAvailable)', {\n      ethFeeRequired: ethFeeRequired,\n      ethAvailable: ethAvailable\n    }));\n  }\n  return InsufficientEthForFeeError;\n}(revert_error_1.RevertError);\nexports.InsufficientEthForFeeError = InsufficientEthForFeeError;\nvar DefaultFunctionWethContractOnlyError = /*#__PURE__*/function (_revert_error_1$Rever3) {\n  _inherits(DefaultFunctionWethContractOnlyError, _revert_error_1$Rever3);\n  function DefaultFunctionWethContractOnlyError(senderAddress) {\n    _classCallCheck(this, DefaultFunctionWethContractOnlyError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(DefaultFunctionWethContractOnlyError).call(this, 'DefaultFunctionWethContractOnlyError', 'DefaultFunctionWethContractOnlyError(address senderAddress)', {\n      senderAddress: senderAddress\n    }));\n  }\n  return DefaultFunctionWethContractOnlyError;\n}(revert_error_1.RevertError);\nexports.DefaultFunctionWethContractOnlyError = DefaultFunctionWethContractOnlyError;\nvar EthFeeLengthMismatchError = /*#__PURE__*/function (_revert_error_1$Rever4) {\n  _inherits(EthFeeLengthMismatchError, _revert_error_1$Rever4);\n  function EthFeeLengthMismatchError(ethFeesLength, feeRecipientsLength) {\n    _classCallCheck(this, EthFeeLengthMismatchError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(EthFeeLengthMismatchError).call(this, 'EthFeeLengthMismatchError', 'EthFeeLengthMismatchError(uint256 ethFeesLength, uint256 feeRecipientsLength)', {\n      ethFeesLength: ethFeesLength,\n      feeRecipientsLength: feeRecipientsLength\n    }));\n  }\n  return EthFeeLengthMismatchError;\n}(revert_error_1.RevertError);\nexports.EthFeeLengthMismatchError = EthFeeLengthMismatchError;\nvar types = [InsufficientEthForFeeError, DefaultFunctionWethContractOnlyError, EthFeeLengthMismatchError];\n// Register the types we've defined.\nfor (var _i = 0, _types = types; _i < _types.length; _i++) {\n  var type = _types[_i];\n  revert_error_1.RevertError.registerType(type);\n}","map":null,"metadata":{},"sourceType":"script"}