{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar rlp = require(\"rlp\");\nvar ethUtil = require('ethereumjs-util');\nvar Buffer = require('safe-buffer').Buffer;\nvar Account = /** @class */function () {\n  function Account(data) {\n    var fields = [{\n      name: 'nonce',\n      default: Buffer.alloc(0)\n    }, {\n      name: 'balance',\n      default: Buffer.alloc(0)\n    }, {\n      name: 'stateRoot',\n      length: 32,\n      default: ethUtil.KECCAK256_RLP\n    }, {\n      name: 'codeHash',\n      length: 32,\n      default: ethUtil.KECCAK256_NULL\n    }];\n    ethUtil.defineProperties(this, fields, data);\n  }\n  Account.prototype.serialize = function () {\n    return rlp.encode([this.nonce, this.balance, this.stateRoot, this.codeHash]);\n  };\n  Account.prototype.isContract = function () {\n    return this.codeHash.toString('hex') !== ethUtil.KECCAK256_NULL_S;\n  };\n  Account.prototype.getCode = function (trie, cb) {\n    if (!this.isContract()) {\n      cb(null, Buffer.alloc(0));\n      return;\n    }\n    trie.getRaw(this.codeHash, cb);\n  };\n  Account.prototype.setCode = function (trie, code, cb) {\n    var _this = this;\n    this.codeHash = ethUtil.keccak256(code);\n    if (this.codeHash.toString('hex') === ethUtil.KECCAK256_NULL_S) {\n      cb(null, Buffer.alloc(0));\n      return;\n    }\n    trie.putRaw(this.codeHash, code, function (err) {\n      cb(err, _this.codeHash);\n    });\n  };\n  Account.prototype.getStorage = function (trie, key, cb) {\n    var t = trie.copy();\n    t.root = this.stateRoot;\n    t.get(key, cb);\n  };\n  Account.prototype.setStorage = function (trie, key, val, cb) {\n    var _this = this;\n    var t = trie.copy();\n    t.root = this.stateRoot;\n    t.put(key, val, function (err) {\n      if (err) return cb();\n      _this.stateRoot = t.root;\n      cb();\n    });\n  };\n  Account.prototype.isEmpty = function () {\n    return this.balance.toString('hex') === '' && this.nonce.toString('hex') === '' && this.stateRoot.toString('hex') === ethUtil.KECCAK256_RLP_S && this.codeHash.toString('hex') === ethUtil.KECCAK256_NULL_S;\n  };\n  return Account;\n}();\nexports.default = Account;","map":null,"metadata":{},"sourceType":"script"}